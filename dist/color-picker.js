module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/lib/ColorWheel.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/fbemitter/index.js":
/*!*****************************************!*\
  !*** ./node_modules/fbemitter/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar fbemitter = {\n  EventEmitter: __webpack_require__(/*! ./lib/BaseEventEmitter */ \"./node_modules/fbemitter/lib/BaseEventEmitter.js\"),\n  EmitterSubscription : __webpack_require__(/*! ./lib/EmitterSubscription */ \"./node_modules/fbemitter/lib/EmitterSubscription.js\")\n};\n\nmodule.exports = fbemitter;\n\n\n//# sourceURL=webpack:///./node_modules/fbemitter/index.js?");

/***/ }),

/***/ "./node_modules/fbemitter/lib/BaseEventEmitter.js":
/*!********************************************************!*\
  !*** ./node_modules/fbemitter/lib/BaseEventEmitter.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BaseEventEmitter\n * @typechecks\n */\n\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EmitterSubscription = __webpack_require__(/*! ./EmitterSubscription */ \"./node_modules/fbemitter/lib/EmitterSubscription.js\");\nvar EventSubscriptionVendor = __webpack_require__(/*! ./EventSubscriptionVendor */ \"./node_modules/fbemitter/lib/EventSubscriptionVendor.js\");\n\nvar emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ \"./node_modules/fbjs/lib/emptyFunction.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"./node_modules/fbjs/lib/invariant.js\");\n\n/**\n * @class BaseEventEmitter\n * @description\n * An EventEmitter is responsible for managing a set of listeners and publishing\n * events to them when it is told that such events happened. In addition to the\n * data for the given event it also sends a event control object which allows\n * the listeners/handlers to prevent the default behavior of the given event.\n *\n * The emitter is designed to be generic enough to support all the different\n * contexts in which one might want to emit events. It is a simple multicast\n * mechanism on top of which extra functionality can be composed. For example, a\n * more advanced emitter may use an EventHolder and EventFactory.\n */\n\nvar BaseEventEmitter = (function () {\n  /**\n   * @constructor\n   */\n\n  function BaseEventEmitter() {\n    _classCallCheck(this, BaseEventEmitter);\n\n    this._subscriber = new EventSubscriptionVendor();\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a listener to be invoked when events of the specified type are\n   * emitted. An optional calling context may be provided. The data arguments\n   * emitted will be passed to the listener function.\n   *\n   * TODO: Annotate the listener arg's type. This is tricky because listeners\n   *       can be invoked with varargs.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    return this._subscriber.addSubscription(eventType, new EmitterSubscription(this._subscriber, listener, context));\n  };\n\n  /**\n   * Similar to addListener, except that the listener is removed after it is\n   * invoked once.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke only once when the\n   *   specified event is emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.once = function once(eventType, listener, context) {\n    var emitter = this;\n    return this.addListener(eventType, function () {\n      emitter.removeCurrentListener();\n      listener.apply(context, arguments);\n    });\n  };\n\n  /**\n   * Removes all of the registered listeners, including those registered as\n   * listener maps.\n   *\n   * @param {?string} eventType - Optional name of the event whose registered\n   *   listeners to remove\n   */\n\n  BaseEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    this._subscriber.removeAllSubscriptions(eventType);\n  };\n\n  /**\n   * Provides an API that can be called during an eventing cycle to remove the\n   * last listener that was invoked. This allows a developer to provide an event\n   * object that can remove the listener (or listener map) during the\n   * invocation.\n   *\n   * If it is called when not inside of an emitting cycle it will throw.\n   *\n   * @throws {Error} When called not during an eventing cycle\n   *\n   * @example\n   *   var subscription = emitter.addListenerMap({\n   *     someEvent: function(data, event) {\n   *       console.log(data);\n   *       emitter.removeCurrentListener();\n   *     }\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   *   emitter.emit('someEvent', 'def'); // does not log anything\n   */\n\n  BaseEventEmitter.prototype.removeCurrentListener = function removeCurrentListener() {\n    !!!this._currentSubscription ?  true ? invariant(false, 'Not in an emitting cycle; there is no current subscription') : undefined : undefined;\n    this._subscriber.removeSubscription(this._currentSubscription);\n  };\n\n  /**\n   * Returns an array of listeners that are currently registered for the given\n   * event.\n   *\n   * @param {string} eventType - Name of the event to query\n   * @return {array}\n   */\n\n  BaseEventEmitter.prototype.listeners = function listeners(eventType) /* TODO: Array<EventSubscription> */{\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {\n      return subscription.listener;\n    }) : [];\n  };\n\n  /**\n   * Emits an event of the given type with the given data. All handlers of that\n   * particular type will be notified.\n   *\n   * @param {string} eventType - Name of the event to emit\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   *\n   * @example\n   *   emitter.addListener('someEvent', function(message) {\n   *     console.log(message);\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   */\n\n  BaseEventEmitter.prototype.emit = function emit(eventType) {\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    if (subscriptions) {\n      var keys = Object.keys(subscriptions);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        var subscription = subscriptions[key];\n        // The subscription may have been removed during this event loop.\n        if (subscription) {\n          this._currentSubscription = subscription;\n          this.__emitToSubscription.apply(this, [subscription].concat(Array.prototype.slice.call(arguments)));\n        }\n      }\n      this._currentSubscription = null;\n    }\n  };\n\n  /**\n   * Provides a hook to override how the emitter emits an event to a specific\n   * subscription. This allows you to set up logging and error boundaries\n   * specific to your environment.\n   *\n   * @param {EmitterSubscription} subscription\n   * @param {string} eventType\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   */\n\n  BaseEventEmitter.prototype.__emitToSubscription = function __emitToSubscription(subscription, eventType) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    subscription.listener.apply(subscription.context, args);\n  };\n\n  return BaseEventEmitter;\n})();\n\nmodule.exports = BaseEventEmitter;\n\n//# sourceURL=webpack:///./node_modules/fbemitter/lib/BaseEventEmitter.js?");

/***/ }),

/***/ "./node_modules/fbemitter/lib/EmitterSubscription.js":
/*!***********************************************************!*\
  !*** ./node_modules/fbemitter/lib/EmitterSubscription.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EmitterSubscription\n * @typechecks\n */\n\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventSubscription = __webpack_require__(/*! ./EventSubscription */ \"./node_modules/fbemitter/lib/EventSubscription.js\");\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\n\nvar EmitterSubscription = (function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  function EmitterSubscription(subscriber, listener, context) {\n    _classCallCheck(this, EmitterSubscription);\n\n    _EventSubscription.call(this, subscriber);\n    this.listener = listener;\n    this.context = context;\n  }\n\n  return EmitterSubscription;\n})(EventSubscription);\n\nmodule.exports = EmitterSubscription;\n\n//# sourceURL=webpack:///./node_modules/fbemitter/lib/EmitterSubscription.js?");

/***/ }),

/***/ "./node_modules/fbemitter/lib/EventSubscription.js":
/*!*********************************************************!*\
  !*** ./node_modules/fbemitter/lib/EventSubscription.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventSubscription\n * @typechecks\n */\n\n\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventSubscription = (function () {\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n  EventSubscription.prototype.remove = function remove() {\n    if (this.subscriber) {\n      this.subscriber.removeSubscription(this);\n      this.subscriber = null;\n    }\n  };\n\n  return EventSubscription;\n})();\n\nmodule.exports = EventSubscription;\n\n//# sourceURL=webpack:///./node_modules/fbemitter/lib/EventSubscription.js?");

/***/ }),

/***/ "./node_modules/fbemitter/lib/EventSubscriptionVendor.js":
/*!***************************************************************!*\
  !*** ./node_modules/fbemitter/lib/EventSubscriptionVendor.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EventSubscriptionVendor\n * @typechecks\n */\n\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"./node_modules/fbjs/lib/invariant.js\");\n\n/**\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\n * subscribed to a particular event type.\n */\n\nvar EventSubscriptionVendor = (function () {\n  function EventSubscriptionVendor() {\n    _classCallCheck(this, EventSubscriptionVendor);\n\n    this._subscriptionsForType = {};\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a subscription keyed by an event type.\n   *\n   * @param {string} eventType\n   * @param {EventSubscription} subscription\n   */\n\n  EventSubscriptionVendor.prototype.addSubscription = function addSubscription(eventType, subscription) {\n    !(subscription.subscriber === this) ?  true ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : undefined : undefined;\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n    var key = this._subscriptionsForType[eventType].length;\n    this._subscriptionsForType[eventType].push(subscription);\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  };\n\n  /**\n   * Removes a bulk set of the subscriptions.\n   *\n   * @param {?string} eventType - Optional name of the event type whose\n   *   registered supscriptions to remove, if null remove all subscriptions.\n   */\n\n  EventSubscriptionVendor.prototype.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n    if (eventType === undefined) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  };\n\n  /**\n   * Removes a specific subscription. Instead of calling this function, call\n   * `subscription.remove()` directly.\n   *\n   * @param {object} subscription\n   */\n\n  EventSubscriptionVendor.prototype.removeSubscription = function removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  };\n\n  /**\n   * Returns the array of subscriptions that are currently registered for the\n   * given event type.\n   *\n   * Note: This array can be potentially sparse as subscriptions are deleted\n   * from it when they are removed.\n   *\n   * TODO: This returns a nullable array. wat?\n   *\n   * @param {string} eventType\n   * @return {?array}\n   */\n\n  EventSubscriptionVendor.prototype.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  };\n\n  return EventSubscriptionVendor;\n})();\n\nmodule.exports = EventSubscriptionVendor;\n\n//# sourceURL=webpack:///./node_modules/fbemitter/lib/EventSubscriptionVendor.js?");

/***/ }),

/***/ "./node_modules/fbjs/lib/emptyFunction.js":
/*!************************************************!*\
  !*** ./node_modules/fbjs/lib/emptyFunction.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n//# sourceURL=webpack:///./node_modules/fbjs/lib/emptyFunction.js?");

/***/ }),

/***/ "./node_modules/fbjs/lib/invariant.js":
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/invariant.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (true) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n//# sourceURL=webpack:///./node_modules/fbjs/lib/invariant.js?");

/***/ }),

/***/ "./src/lib/ColorWheel.ts":
/*!*******************************!*\
  !*** ./src/lib/ColorWheel.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fbemitter_1 = __webpack_require__(/*! fbemitter */ \"./node_modules/fbemitter/index.js\");\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./src/utils/index.ts\");\nvar ColorWheel = /** @class */ (function (_super) {\n    __extends(ColorWheel, _super);\n    function ColorWheel(config) {\n        var _this = _super.call(this) || this;\n        _this.dotDraggable = false;\n        _this.dotId = '__COLOR_PICKER_DOT_ID__';\n        _this.canvasId = '__COLOR_PICKER_CANVAS__';\n        _this.defaultConfig = {\n            size: 500,\n            centerColor: '#FFF',\n            containerId: '',\n            pipeCircleSize: 300,\n            dotSize: 6,\n            dotColor: \"#333\"\n        };\n        _this.config = __assign(__assign({}, _this.defaultConfig), config);\n        _this.container = document.getElementById(config.containerId);\n        _this.handleContainerPosition();\n        _this.init();\n        // @ts-ignore\n        window.colorPicker = _this;\n        return _this;\n    }\n    Object.defineProperty(ColorWheel.prototype, \"circleCenterAxis\", {\n        // 圆心\n        get: function () {\n            var _a = this, container = _a.container, dot = _a.dot;\n            return {\n                x: (container.offsetWidth - dot.offsetWidth) / 2,\n                y: (container.offsetHeight - dot.offsetHeight) / 2,\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorWheel.prototype, \"bigCircleRadius\", {\n        get: function () {\n            var container = this.container;\n            return container.offsetHeight / 2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorWheel.prototype, \"smallCircleRadius\", {\n        get: function () {\n            var centerMask = this.centerMask;\n            return centerMask.offsetHeight / 2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorWheel.prototype, \"boundingClientRect\", {\n        get: function () {\n            return this.container.getBoundingClientRect();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ColorWheel.prototype.handleContainerPosition = function () {\n        if (!this.container)\n            throw \"container id error\";\n        this.container.style.width = this.config.size + 'px';\n        this.container.style.height = this.config.size + 'px';\n        this.container.style.margin = 'auto';\n        var positionType = window.getComputedStyle(this.container).position;\n        if (positionType === 'static') {\n            this.container.style.position = 'relative';\n        }\n    };\n    ColorWheel.prototype.getValue = function (positionX, positionY) {\n        var ctx = this.canvas.getContext('2d');\n        var info = ctx.getImageData(positionX, positionY, 1, 1);\n        var data = info.data;\n        var r = data[0], g = data[1], b = data[2];\n        var hexColor = utils_1.colorRGBtoHex({ r: r, g: g, b: b });\n        return {\n            r: data[0],\n            g: data[1],\n            b: data[2],\n            hex: hexColor\n        };\n    };\n    ColorWheel.prototype.init = function () {\n        this.drawColorWheel();\n        this.drawCenterMask();\n        this.addDragableDot();\n        this.initEvents();\n    };\n    ColorWheel.prototype.initEvents = function () {\n        document.addEventListener(\"pointerdown\", this.moveStart.bind(this), false);\n        document.addEventListener(\"pointermove\", this.dotMoveHandler.bind(this), false);\n        document.addEventListener(\"pointerup\", this.moveEnd.bind(this), false);\n    };\n    ColorWheel.prototype.drawColorWheel = function () {\n        var container = this.container;\n        var size = this.config.size;\n        var MAX_HEX = 255;\n        var MAX_ANGLE = 360;\n        var CENTER_COLOR = '#FFFFFF';\n        var radius = size / 2;\n        var canvas = document.createElement('canvas');\n        canvas.id = this.canvasId;\n        this.canvas = canvas;\n        canvas.width = canvas.height = size;\n        var canvasClone = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        canvasClone.width = canvasClone.height = size;\n        var canvasCloneCtx = canvasClone.getContext('2d');\n        var angle = 0;\n        var hexCode = [255, 0, 0];\n        var pivotPointer = 0;\n        var colorOffsetByDegree = 4.322;\n        while (angle++ < MAX_ANGLE) {\n            var pivotPointerbefore = (pivotPointer + 3 - 1) % 3;\n            if (hexCode[pivotPointer] < MAX_HEX) {\n                hexCode[pivotPointer] = (hexCode[pivotPointer] + colorOffsetByDegree > MAX_HEX ?\n                    MAX_HEX :\n                    hexCode[pivotPointer] + colorOffsetByDegree);\n            }\n            else if (hexCode[pivotPointerbefore] > 0) {\n                hexCode[pivotPointerbefore] = (hexCode[pivotPointerbefore] > colorOffsetByDegree ?\n                    hexCode[pivotPointerbefore] - colorOffsetByDegree :\n                    0);\n            }\n            else if (hexCode[pivotPointer] >= MAX_HEX) {\n                hexCode[pivotPointer] = MAX_HEX;\n                pivotPointer = (pivotPointer + 1) % 3;\n            }\n            canvasCloneCtx.clearRect(0, 0, size, size);\n            // 创建渐变色\n            var grad = canvasCloneCtx.createRadialGradient(radius, radius, 0, radius, radius, radius);\n            grad.addColorStop(0, CENTER_COLOR);\n            grad.addColorStop(1, 'rgb(' + hexCode.map(function (h) { return Math.floor(h); }).join(',') + ')');\n            canvasCloneCtx.fillStyle = grad;\n            canvasCloneCtx.globalCompositeOperation = 'source-over';\n            canvasCloneCtx.beginPath();\n            canvasCloneCtx.arc(radius, radius, radius, 0, Math.PI * 2);\n            canvasCloneCtx.closePath();\n            canvasCloneCtx.fill();\n            canvasCloneCtx.globalCompositeOperation = 'destination-out';\n            canvasCloneCtx.beginPath();\n            canvasCloneCtx.arc(radius, radius, 0, utils_1.degreesToRadians(angle + 1), utils_1.degreesToRadians(angle + 1));\n            canvasCloneCtx.arc(radius, radius, radius + 1, utils_1.degreesToRadians(angle + 1), utils_1.degreesToRadians(angle + 1));\n            canvasCloneCtx.arc(radius, radius, radius + 1, utils_1.degreesToRadians(angle + 1), utils_1.degreesToRadians(angle - 1));\n            canvasCloneCtx.arc(radius, radius, 0, utils_1.degreesToRadians(angle + 1), utils_1.degreesToRadians(angle - 1));\n            canvasCloneCtx.closePath();\n            canvasCloneCtx.fill();\n            ctx.drawImage(canvasClone, 0, 0);\n        }\n        var el = utils_1.createCircleDom('div', size);\n        el.style.overflow = 'hidden';\n        el.style.position = \"absolute\";\n        el.style.left = (container.offsetWidth - canvas.width) / 2 + 'px';\n        el.style.top = (container.offsetHeight - canvas.height) / 2 + 'px';\n        el.style.zIndex = '2';\n        el.appendChild(this.canvas);\n        container.appendChild(el);\n    };\n    /**\n     * 添加中间的圆形遮罩\n     *\n     * @private\n     *\n     * @memberOf ColorWheel\n     */\n    ColorWheel.prototype.drawCenterMask = function () {\n        var container = this.container;\n        var _a = this.config, pipeCircleSize = _a.pipeCircleSize, size = _a.size, centerColor = _a.centerColor;\n        if (pipeCircleSize > 0) {\n            var el = utils_1.createCircleDom('div', pipeCircleSize);\n            el.style.background = centerColor;\n            el.style.position = \"absolute\";\n            el.style.left = (container.offsetWidth - pipeCircleSize) / 2 + 'px';\n            el.style.top = (container.offsetHeight - pipeCircleSize) / 2 + 'px';\n            el.style.zIndex = '3';\n            this.centerMask = el;\n            this.container.appendChild(el);\n        }\n    };\n    ColorWheel.prototype.addDragableDot = function () {\n        var _a = this.config, dotSize = _a.dotSize, dotColor = _a.dotColor, size = _a.size;\n        this.dot = document.createElement(\"div\");\n        this.dot.style.position = \"absolute\";\n        this.dot.style.height = \"0\";\n        this.dot.style.width = \"0\";\n        this.dot.style.left = (size / 2 - dotSize / 2) / 2 - 30 + 'px';\n        this.dot.style.top = (size / 2 - dotSize / 2) / 2 - 30 + 'px';\n        var el = utils_1.createCircleDom('div', dotSize);\n        el.id = this.dotId;\n        el.style.background = 'none';\n        el.style.border = \"4px solid \" + dotColor;\n        el.style.position = \"absolute\";\n        el.style.boxSizing = \"content-box\";\n        el.style.left = (-(dotSize + 4)) / 2 + \"px\";\n        el.style.top = (-(dotSize + 4)) / 2 + \"px\";\n        el.style.zIndex = '3';\n        var addClass = this.config.dotClass;\n        if (addClass) {\n            var _class = el.getAttribute('class');\n            el.setAttribute('class', _class ? _class + \" \" + addClass : addClass);\n        }\n        this.dot.appendChild(el);\n        this.container.appendChild(this.dot);\n    };\n    ColorWheel.prototype.moveEnd = function () {\n        this.dotDraggable = false;\n    };\n    ColorWheel.prototype.moveStart = function (event) {\n        var target = event.target;\n        if (target.id === this.canvasId || target.id === this.dotId) {\n            this.dotDraggable = true;\n            this.setPositionByEvent(event);\n        }\n    };\n    ColorWheel.prototype.dotMoveHandler = function (event) {\n        if (!this.dotDraggable) {\n            return;\n        }\n        this.setPositionByEvent(event);\n    };\n    ColorWheel.prototype.setPositionByEvent = function (event) {\n        var x = event.clientX - this.boundingClientRect.left;\n        var y = event.clientY - this.boundingClientRect.top;\n        var p1 = { x: x, y: y };\n        var p2 = this.circleCenterAxis; // 圆心\n        /**\n         * 限制大圆的范围\n         */\n        var line = utils_1.getLineEquationByTwoPoints(p1, p2);\n        // 直线和大圆的交点x的值\n        var circleLineIntersections = utils_1.findCircleLineIntersections(this.bigCircleRadius - 1, p2.x, p2.y, line.m, line.n);\n        // 直线和小圆的交点x的值（中间白色的那个）\n        var circleLineIntersections2 = utils_1.findCircleLineIntersections(this.smallCircleRadius - 1, p2.x, p2.y, line.m, line.n);\n        if (circleLineIntersections.length === 0) {\n            return;\n        }\n        else if (circleLineIntersections.length === 1) { // 圆的切线\n            this.setDotPosition(x, y);\n        }\n        else {\n            var _x = 0;\n            var _y = 0;\n            if (utils_1.getTwoPointsDistance(p1, p2) > this.bigCircleRadius || utils_1.getTwoPointsDistance(p1, p2) < this.smallCircleRadius) { //说明在大圆外头或者小圆里头\n                if (utils_1.getTwoPointsDistance(p1, p2) > this.bigCircleRadius) {\n                    _x = p1.x >= p2.x ? circleLineIntersections[0] : circleLineIntersections[1];\n                    _y = utils_1.getLineYByXvalue(line, _x);\n                }\n                else {\n                    _x = p1.x >= p2.x ? circleLineIntersections2[0] : circleLineIntersections2[1];\n                    _y = utils_1.getLineYByXvalue(line, _x);\n                }\n                this.setDotPosition(_x, _y);\n            }\n            else {\n                this.setDotPosition(x, y);\n            }\n        }\n    };\n    ColorWheel.prototype.ifPointInWheel = function (x, y) {\n        var size = this.config.size;\n        var centerPoint = { x: size / 2, y: size / 2 };\n        var currentPoint = { x: x, y: y };\n        var distance = utils_1.getTwoPointsDistance(centerPoint, currentPoint);\n        var colorWheelRadius = size / 2;\n        var centerMaskRadius = this.config.pipeCircleSize / 2;\n        var _a = this.boundingClientRect, left = _a.left, width = _a.width, top = _a.top, height = _a.height;\n        return x <= left + width && y <= top + height && distance <= colorWheelRadius && distance >= centerMaskRadius;\n    };\n    ColorWheel.prototype.setDotPosition = function (x, y) {\n        this.dot.style.left = x + 'px';\n        this.dot.style.top = y + 'px';\n        var colorValue = this.getValue(x, y);\n        this.emit(\"colorChange\", colorValue);\n    };\n    return ColorWheel;\n}(fbemitter_1.EventEmitter));\nexports.default = ColorWheel;\n\n\n//# sourceURL=webpack:///./src/lib/ColorWheel.ts?");

/***/ }),

/***/ "./src/utils/index.ts":
/*!****************************!*\
  !*** ./src/utils/index.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLineYByXvalue = exports.getLineEquationByTwoPoints = exports.findCircleLineIntersections = exports.colorRGBtoHex = exports.getTwoPointsDistance = exports.createCircleDom = exports.degreesToRadians = void 0;\nfunction degreesToRadians(degrees) {\n    return degrees * (Math.PI / 180);\n}\nexports.degreesToRadians = degreesToRadians;\nfunction createCircleDom(elType, size) {\n    var el = document.createElement(elType);\n    el.style.height = size + \"px\";\n    el.style.width = size + \"px\";\n    el.style.borderRadius = \"50%\";\n    el.style.zIndex = '3';\n    return el;\n}\nexports.createCircleDom = createCircleDom;\nfunction getTwoPointsDistance(p1, p2) {\n    var x = p1.x - p2.x;\n    var y = p1.y - p2.y;\n    return Math.sqrt(x * x + y * y);\n}\nexports.getTwoPointsDistance = getTwoPointsDistance;\nfunction colorRGBtoHex(color) {\n    var r = color.r, g = color.g, b = color.b;\n    var hex = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    return hex;\n}\nexports.colorRGBtoHex = colorRGBtoHex;\n/**\n * 求一条直线和一个圆的焦点\n *\n * @export\n * @param {number} r 圆的半径\n * @param {number} h 圆心x\n * @param {number} k 圆心y\n * @param {number} m 直线y = mx+n 中的m\n * @param {number} n 直线y = mx+n 中的n\n * @returns 因为可能有多个坐标，返回的是交点中x的集合\n */\nfunction findCircleLineIntersections(r, h, k, m, n) {\n    // circle: (x - h)^2 + (y - k)^2 = r^2\n    // line: y = m * x + n\n    // r: circle radius\n    // h: x value of circle centre\n    // k: y value of circle centre\n    // m: slope\n    // n: y-intercept\n    // get a, b, c values\n    // var a = 1 + sq(m);\n    var a = 1 + m * m;\n    // var b = -h * 2 + (m * (n - k)) * 2;\n    var b = -h * 2 + (m * (n - k)) * 2;\n    // var c = sq(h) + sq(n - k) - sq(r);\n    var c = h * h + (n - k) * (n - k) - r * r;\n    // get discriminant\n    // var d = sq(b) - 4 * a * c;\n    var d = b * b - 4 * a * c;\n    if (d >= 0) {\n        // insert into quadratic formula\n        // var intersections = [\n        //   (-b + sqrt(sq(b) - 4 * a * c)) / (2 * a),\n        //   (-b - sqrt(sq(b) - 4 * a * c)) / (2 * a)\n        // ];\n        var intersections = [\n            (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a),\n            (-b - Math.sqrt(b * b - 4 * a * c)) / (2 * a)\n        ];\n        if (d == 0) {\n            // only 1 intersection\n            return [intersections[0]];\n        }\n        return intersections;\n    }\n    // no intersection\n    return [];\n}\nexports.findCircleLineIntersections = findCircleLineIntersections;\n/**\n * 已知两点求直线\n *\n * @export\n * @param {IPoint} p1\n * @param {IPoint} p2\n * @returns => { m: number, n: number}\n *\n * 分别为直线y = mx + n中的 m和n\n */\nfunction getLineEquationByTwoPoints(p1, p2) {\n    var m = (p2.y - p1.y) / (p2.x - p1.x);\n    var n = p1.y - p1.x * m;\n    return {\n        m: m,\n        n: n\n    };\n}\nexports.getLineEquationByTwoPoints = getLineEquationByTwoPoints;\n/**\n * 已知直线方程 y = mx + n, 且一个x, 求y的值\n *\n * @export\n * @param {ILine} line\n * @param {number} x\n * @returns {number}\n */\nfunction getLineYByXvalue(line, x) {\n    var y = line.m * x + line.n;\n    return y;\n}\nexports.getLineYByXvalue = getLineYByXvalue;\n\n\n//# sourceURL=webpack:///./src/utils/index.ts?");

/***/ })

/******/ });